name: CIs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.type }}
  cancel-in-progress: true
on:
    pull_request:
    push:
      branches: [main]
    schedule:
      - cron: "0 4 * * *"

jobs:
  flake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
      - name: Lint with flake8
        run: flake8
  pytest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        mne: [main, maint/1.3]
        opengl: ['[opengl]']
        python: ['3.11']
        name: [matrix]
        include:
          - os: ubuntu
            mne: main
            opengl: '[opengl]'
            python: '3.8'
            name: old 3.8
          - os: ubuntu
            mne: main
            opengl: ''
            python: '3.9'
            name: no opengl
          - os: ubuntu
            mne: maint/1.3
            opengl: ''
            python: '3.9'
            name: no opengl
          - os: ubuntu
            mne: maint/1.0
            opengl: '[opengl]'
            python: '3.9'
            name: old
    name: pytest ${{ matrix.name }} / ${{ matrix.os }} / MNE ${{ matrix.mne }}
    runs-on: ${{ matrix.os }}-latest
    env:
      MNE_LOGGING_LEVEL: 'warning'
      MKL_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      DISPLAY: ':99.0'
      MNE_BRANCH: ${{ matrix.mne }}
      PIP_OPTION: ${{ matrix.opengl }}
      PYTHON_VERSION: ${{ matrix.python }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |  # use MNE main to ensure test files are available
          set -e
          python -m pip install --upgrade pip
          git clone -b ${MNE_BRANCH} --single-branch --branch main https://github.com/mne-tools/mne-python.git ../mne-python
          python -m pip install -qe ../mne-python
          python -m pip install -ve .${PIP_OPTION} -r requirements.txt -r requirements_testing.txt PyQt5
      - shell: bash -el {0}
        run: ./tools/get_testing_version.sh
        name: 'Get testing version'
        working-directory: ../mne-python
      - uses: actions/cache@v3
        with:
          key: ${{ env.TESTING_VERSION }}
          path: ~/mne_data
        name: 'Cache testing data'
      - run: python -c 'import mne; print(mne.datasets.testing.data_path(verbose=True))'
        name: 'Download testing data'
      - run: |
          set -e
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
        name: Setup OpenGL on Windows
        if: runner.os == 'Windows'
      - run: |
          curl --remote-name https://raw.githubusercontent.com/mne-tools/mne-python/main/tools/setup_xvfb.sh
          bash setup_xvfb.sh
        name: Setup xvfb on Linux
        working-directory: ../mne-python
        if: runner.os == 'Linux'
      - run: |
          set -e
          sudo apt install mesa-utils
          glxinfo | grep enderer
        name: Check OpenGL
        working-directory: ../mne-python
        if: runner.os == 'Linux' && contains(matrix.opengl, 'opengl')
      - name: Show system information
        run: mne sys_info
      - run: pytest -m pgtest --cov=mne_qt_browser --cov-report=xml ../mne-python/mne/viz ../mne-python/mne/report
        name: Run MNE-Tests
      - run: pytest --error-for-skips mne_qt_browser/tests/test_pg_specific.py
        name: Run pyqtgraph-specific tests
      # These are slow on macOS, so skip them
      - run: pytest mne_qt_browser/tests/test_speed.py
        name: Run benchmarks
        if: runner.os != 'macOS'
      - uses: codecov/codecov-action@v1
        if: always()
        name: 'Upload coverage to CodeCov'
  qt:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        mne: [main]
        opengl: ['[opengl]']
        qt: [PyQt5, PyQt6, PySide2, PySide6]
        python: ['3.11']
        name: [matrix]
        include:
          - os: macos
            mne: main
            opengl: '[opengl]'
            qt: PySide6
            python: '3.11'
          - os: windows
            mne: main
            opengl: '[opengl]'
            qt: PySide6
            python: '3.11'
    name: ${{ matrix.qt }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    env:
      MNE_LOGGING_LEVEL: 'warning'
      MKL_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      DISPLAY: ':99.0'
      MNE_BRANCH: ${{ matrix.mne }}
      PIP_OPTION: ${{ matrix.opengl }}
      PYTHON_VERSION: ${{ matrix.python }}
      QT_LIB: ${{ matrix.qt }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |  # use MNE main to ensure test files are available
          set -e
          python -m pip install --upgrade pip
          git clone -b ${MNE_BRANCH} --single-branch --branch main https://github.com/mne-tools/mne-python.git ../mne-python
          python -m pip install -qe ../mne-python
          python -m pip install -ve .${PIP_OPTION} -r requirements.txt -r requirements_testing.txt $QT_LIB
      - shell: bash -el {0}
        run: ./tools/get_testing_version.sh
        name: 'Get testing version'
        working-directory: ../mne-python
      - uses: actions/cache@v3
        with:
          key: ${{ env.TESTING_VERSION }}
          path: ~/mne_data
        name: 'Cache testing data'
      - run: python -c 'import mne; print(mne.datasets.testing.data_path(verbose=True))'
        name: 'Download testing data'
      - run: |
          set -e
          ./tools/setup_xvfb.sh
          sudo apt install -yq libegl1
        name: Setup xvfb on Linux
        working-directory: ../mne-python
        if: runner.os == 'Linux'
      - name: Check Qt
        run: |
          mne sys_info -pd
          echo ${QT_LIB}:
          mne sys_info -pd | grep "^qtpy: .*{${QT_LIB}=.*}$"
      - run: pytest -m pgtest --cov=mne_qt_browser --cov-report=xml ../mne-python/mne/viz ../mne-python/mne/report
        name: Run MNE-Tests
      - run: pytest --error-for-skips mne_qt_browser/tests/test_pg_specific.py
        name: Run pyqtgraph-specific tests
      # For some reason this dies on Linux PySide2. We can live without this
      # case given our primary target moving forward is Qt6+
      - run: pytest mne_qt_browser/tests/test_speed.py
        name: Run benchmarks
        if: runner.os != 'Linux' || matrix.qt != 'PySide2'
      - uses: codecov/codecov-action@v1
        if: always()
        name: 'Upload coverage to CodeCov'

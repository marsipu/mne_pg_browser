name: CIs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.type }}
  cancel-in-progress: true
on:
    pull_request:
    push:
      branches: [main]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
        - os: windows-latest
        # - os: macos-latest
    defaults:
      run:
        shell: bash
    env:
      MNE_LOGGING_LEVEL: 'warning'
      MKL_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      DISPLAY: ':99.0'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |  # use MNE main to ensure test files are available
          set -e
          python -m pip install --upgrade pip
          git clone -b pg_test --single-branch --depth=1 https://github.com/marsipu/mne-python.git
          python -m pip install -e ./mne-python
          python -m pip install -r requirements.txt -r requirements_testing.txt
      - shell: bash -el {0}
        run: ./tools/get_testing_version.sh
        name: 'Get testing version'
        working-directory: mne-python
      - uses: actions/cache@v2
        with:
          key: ${{ env.TESTING_VERSION }}
          path: ~/mne_data
        name: 'Cache testing data'
      - run: |
          set -e
          git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
        name: Setup OpenGL on Windows
        if: runner.os == 'Windows'
      - run: ./tools/setup_xvfb.sh
        name: Setup xvfb on Linux
        working-directory: mne-python
        if: runner.os == 'Linux'
      - name: Show system information
        run: mne sys_info
      - name: Run MNE-Tests
        run: |
          pwd
          mnePath=$(python -c "import mne; print(mne.__path__[0])")
          mkdir ./tests
          cp $mnePath/viz/tests/test_raw.py ./tests/test_raw.py
          pytest --cov=mne_qt_browser tests
      - uses: codecov/codecov-action@v1
        if: always()
        name: 'Upload coverage to CodeCov'

  flake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
      - name: Lint with flake8
        run: flake8